package mx.com.cdc.odc.client.model;

import java.util.Objects;

import org.threeten.bp.LocalDate;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModelProperty;


public class InvestmentsRequestPayload {
  @SerializedName("request_code")
  private String requestCode = null;
  @SerializedName("start_date")
  private LocalDate startDate = null;
  @SerializedName("read_customer")
  private Boolean readCustomer = null;
  @SerializedName("read_portfolio")
  private Boolean readPortfolio = null;
  @SerializedName("read_positions")
  private Boolean readPositions = null;
  public InvestmentsRequestPayload requestCode(String requestCode) {
    this.requestCode = requestCode;
    return this;
  }
   
  @ApiModelProperty(value = "Unique alphanumeric identifier for the request. This must be generated by the merchant. Max: 36 characters")
  public String getRequestCode() {
    return requestCode;
  }
  public void setRequestCode(String requestCode) {
    this.requestCode = requestCode;
  }
  public InvestmentsRequestPayload startDate(LocalDate startDate) {
    this.startDate = startDate;
    return this;
  }
   
  @ApiModelProperty(value = "")
  public LocalDate getStartDate() {
    return startDate;
  }
  public void setStartDate(LocalDate startDate) {
    this.startDate = startDate;
  }
  public InvestmentsRequestPayload readCustomer(Boolean readCustomer) {
    this.readCustomer = readCustomer;
    return this;
  }
   
  @ApiModelProperty(value = "When set to true brings the details of the customers available.")
  public Boolean isReadCustomer() {
    return readCustomer;
  }
  public void setReadCustomer(Boolean readCustomer) {
    this.readCustomer = readCustomer;
  }
  public InvestmentsRequestPayload readPortfolio(Boolean readPortfolio) {
    this.readPortfolio = readPortfolio;
    return this;
  }
   
  @ApiModelProperty(value = "When set to true read the portfolio of products.")
  public Boolean isReadPortfolio() {
    return readPortfolio;
  }
  public void setReadPortfolio(Boolean readPortfolio) {
    this.readPortfolio = readPortfolio;
  }
  public InvestmentsRequestPayload readPositions(Boolean readPositions) {
    this.readPositions = readPositions;
    return this;
  }
   
  @ApiModelProperty(value = "When set to true read detail of positions hired.")
  public Boolean isReadPositions() {
    return readPositions;
  }
  public void setReadPositions(Boolean readPositions) {
    this.readPositions = readPositions;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvestmentsRequestPayload investmentsRequestPayload = (InvestmentsRequestPayload) o;
    return Objects.equals(this.requestCode, investmentsRequestPayload.requestCode) &&
        Objects.equals(this.startDate, investmentsRequestPayload.startDate) &&
        Objects.equals(this.readCustomer, investmentsRequestPayload.readCustomer) &&
        Objects.equals(this.readPortfolio, investmentsRequestPayload.readPortfolio) &&
        Objects.equals(this.readPositions, investmentsRequestPayload.readPositions);
  }
  @Override
  public int hashCode() {
    return Objects.hash(requestCode, startDate, readCustomer, readPortfolio, readPositions);
  }
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvestmentsRequestPayload {\n");
    
    sb.append("    requestCode: ").append(toIndentedString(requestCode)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    readCustomer: ").append(toIndentedString(readCustomer)).append("\n");
    sb.append("    readPortfolio: ").append(toIndentedString(readPortfolio)).append("\n");
    sb.append("    readPositions: ").append(toIndentedString(readPositions)).append("\n");
    sb.append("}");
    return sb.toString();
  }
  
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
